"""Fix: Remove date to Timemixxin

Revision ID: 485d594c147e
Revises: 40a8e5458bc8
Create Date: 2025-05-23 16:43:20.373198

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "485d594c147e"
down_revision: Union[str, None] = "40a8e5458bc8"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "medications",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("dog_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("time", sa.Time(), nullable=False),
        sa.Column("weekdays", sa.String(length=20), nullable=False),
        sa.Column("dosage", sa.String(length=50), nullable=False),
        sa.Column("start_date", sa.Date(), nullable=False),
        sa.Column("end_date", sa.Date(), nullable=True),
        sa.Column("memo", sa.String(length=255), nullable=True),
        sa.Column("alarm_enabled", sa.Boolean(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["dog_id"],
            ["dogs.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.add_column(
        "dog_allergies",
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
    )
    op.add_column(
        "dog_allergies",
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
    )
    op.add_column(
        "dog_diseases",
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
    )
    op.add_column(
        "dog_diseases",
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
    )
    op.add_column(
        "dog_mbtis",
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
    )
    op.add_column(
        "dog_mbtis", sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True)
    )
    op.add_column(
        "food_records",
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
    )
    op.add_column(
        "food_records",
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
    )
    op.alter_column(
        "food_records",
        "time",
        existing_type=sa.VARCHAR(length=10),
        type_=sa.Time(),
        existing_nullable=False,
        postgresql_using='"time"::time',
    )
    op.drop_index("ix_food_records_date", table_name="food_records")
    op.drop_column("food_records", "date")
    op.add_column(
        "health_checks",
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
    )
    op.add_column(
        "health_checks",
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
    )
    op.drop_index("ix_health_checks_date", table_name="health_checks")
    op.drop_column("health_checks", "date")
    op.add_column(
        "walk_records",
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
    )
    op.add_column(
        "walk_records",
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
    )
    op.drop_index("ix_walk_records_date", table_name="walk_records")
    op.drop_column("walk_records", "date")
    op.add_column(
        "water_intakes",
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
    )
    op.add_column(
        "water_intakes",
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
    )
    op.drop_index("ix_water_intakes_date", table_name="water_intakes")
    op.drop_column("water_intakes", "date")
    op.add_column(
        "weight_records",
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
    )
    op.add_column(
        "weight_records",
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
    )
    op.drop_index("ix_weight_records_date", table_name="weight_records")
    op.drop_column("weight_records", "date")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "weight_records",
        sa.Column("date", sa.DATE(), autoincrement=False, nullable=False),
    )
    op.create_index("ix_weight_records_date", "weight_records", ["date"], unique=False)
    op.drop_column("weight_records", "deleted_at")
    op.drop_column("weight_records", "updated_at")
    op.add_column(
        "water_intakes",
        sa.Column("date", sa.DATE(), autoincrement=False, nullable=False),
    )
    op.create_index("ix_water_intakes_date", "water_intakes", ["date"], unique=False)
    op.drop_column("water_intakes", "deleted_at")
    op.drop_column("water_intakes", "updated_at")
    op.add_column(
        "walk_records",
        sa.Column("date", sa.DATE(), autoincrement=False, nullable=False),
    )
    op.create_index("ix_walk_records_date", "walk_records", ["date"], unique=False)
    op.drop_column("walk_records", "deleted_at")
    op.drop_column("walk_records", "updated_at")
    op.add_column(
        "health_checks",
        sa.Column("date", sa.DATE(), autoincrement=False, nullable=False),
    )
    op.create_index("ix_health_checks_date", "health_checks", ["date"], unique=False)
    op.drop_column("health_checks", "deleted_at")
    op.drop_column("health_checks", "updated_at")
    op.add_column(
        "food_records",
        sa.Column("date", sa.DATE(), autoincrement=False, nullable=False),
    )
    op.create_index("ix_food_records_date", "food_records", ["date"], unique=False)
    op.alter_column(
        "food_records",
        "time",
        existing_type=sa.Time(),
        type_=sa.VARCHAR(length=10),
        existing_nullable=False,
        postgresql_using='"time"::time',
    )
    op.drop_column("food_records", "deleted_at")
    op.drop_column("food_records", "updated_at")
    op.drop_column("dog_mbtis", "deleted_at")
    op.drop_column("dog_mbtis", "updated_at")
    op.drop_column("dog_diseases", "deleted_at")
    op.drop_column("dog_diseases", "updated_at")
    op.drop_column("dog_allergies", "deleted_at")
    op.drop_column("dog_allergies", "updated_at")
    op.drop_table("medications")
    # ### end Alembic commands ###
